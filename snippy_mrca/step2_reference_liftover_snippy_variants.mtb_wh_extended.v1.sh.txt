#!/bin/bash

set -e

# This bash script is used to filter out Snippy variants at the edge of the contigs and to lift them over to a common reference genome


## Choose new reference

ref_id="h37rv";

pairs_file="/nfs/users/nfs_f/fc4/lustre_scratch118/67.mtb_within_host/snippy_mrca/mtb_wh_extended.v1.all_pairs.mrca.txt"; # file created by script step1_run_snippy.colonising.mtb_wh_extended.v1.sh.txt

vcf_dir="/nfs/users/nfs_f/fc4/lustre_scratch118/67.mtb_within_host/snippy_mrca/snippy_vcfs/";

ref_dir="/nfs/users/nfs_f/fc4/lustre_scratch118/67.mtb_within_host/identify_ancestral/snippy_vcfs/";

if [ "$ref_id" == "h37rv" ]
then
	new_ref="/nfs/users/nfs_f/fc4/lustre_scratch118/67.mtb_within_host/reference/Mycobacterium_tuberculosis_ancestral_reference.fasta";
fi

missing_vcfs="/nfs/users/nfs_f/fc4/lustre_scratch118/67.mtb_within_host/snippy_mrca/mtb_wh_extended.v1.all_pairs.mrca.missing_snippy_vcfs.txt";

window_size1="210";
window_size2="200";

laPairs=`awk -F'\t' '{ print $1}' $pairs_file`;

for pair in $laPairs
do

echo $pair
# SRR5250774.SRR5250228.mrca.young2017-P103
IFS='.' read -a array <<< "$pair";
sample="${array[0]}"; ref="${array[1]}";
array2=${array[@]:3:${#array[@]}};
strain=`echo $array2 | tr ' ' '.'`;

ref_file_fasta=$ref_dir$strain".mrca."$ref".fasta";
map_ref=$ref_file_fasta;

vcf_in=$vcf_dir$pair".snippy.vcf";
vcf_filt=$vcf_dir$pair".snippy.kept.vcf";
vcf_rm=$vcf_dir$pair".snippy.rm.vcf";
vcf_out=$vcf_dir$pair".snippy."$ref_id".vcf";
vcf_nm_out=$vcf_dir$pair".snippy."$ref_id".not_mapped.vcf";

if [ -s $vcf_in ]
then
	if [ ! -f $vcf_filt ]
	then
		bsub -q normal -G team346 -J $pair"_filt" -o $pair"_filt.out" -R "select[mem > 5000] rusage[mem=5000]" -M 5000 "python3 /nfs/users/nfs_f/fc4/scripts/remove_variants_at_edges_from_vcf.py -i $vcf_in -o $vcf_filt -r $vcf_rm -w $window_size1"
	fi
	# if [ ! -f $vcf_out ]
	#then
	# 	bsub -q normal -G team346 -J $pair"_lift" -o $pair"_lift.out" -R "select[mem > 5000] rusage[mem=5000]" -M 5000 "perl /nfs/users/nfs_f/fc4/scripts/insert_variants.v2.pl --map_ref $map_ref --new_ref $new_ref --input_vcf $vcf_filt --output_vcf $vcf_out --not_mapped_vcf $vcf_nm_out --window_size $window_size2 --window_size_per 0.5"
	#fi
else
	echo "Missing VCF "$vcf_in
	echo $vcf_in >> $missing_vcfs
fi

done
