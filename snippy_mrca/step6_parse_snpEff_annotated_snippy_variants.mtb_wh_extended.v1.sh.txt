
# This bash script is used to parse the snpEff annotated VCF into a tabular table using the python script parse_snpEff_vcf.py

ref="h37rv";
ref_file="h37rv";

vcf_dir="/nfs/users/nfs_f/fc4/lustre_scratch118/67.mtb_within_host/snippy_mrca/snippy_vcfs/";
pair_ids="/nfs/users/nfs_f/fc4/lustre_scratch118/67.mtb_within_host/snippy_mrca/mtb_wh_extended.v1.all_pairs.mrca.txt"; # file created by script step1_run_snippy.colonising.mtb_wh_extended.v1.sh.txt
gff_file="/nfs/users/nfs_f/fc4/lustre_scratch118/67.mtb_within_host/snippy_mrca/"$ref_file".gff";

combined_table="mtb_wh_extended.v1.mrca.snippy_snpEff_annotated_variants."$ref".in_ref_VCF.txt";

laPairs=`awk -F'\t' '{ print $1}' $pair_ids`;

for pair in $laPairs
do

echo $pair
ann_vcf=$vcf_dir$pair".snippy."$ref".norm.in_ref_VCF.snpEff_ann.vcf";
echo $ann_vcf
ann_table=$vcf_dir$pair".snippy."$ref".norm.in_ref_VCF.snpEff_ann.txt";

if [ -f $ann_vcf ] 
then
if [ ! -f $ann_table ] 
then
python3 ~/scripts/parse_snpEff_vcf.py --gff_file $gff_file --gff_fields feature,start,end,strand --gff_ann_fields locus_tag,gene,product -i $ann_vcf -o $ann_table
fi
cat $ann_table | awk -F'\t' -v sample="$pair" '{ print sample"\t"$0}' >> $combined_table
fi

done






